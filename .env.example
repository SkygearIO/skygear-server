# this is an example configuration file with all available environment variables
# copy this file to .env and replace the values
#
# see https://docs.skygear.io/guides/advanced/server/#install-skygear-server for
# more details
#
# EXAMPLE CONFIG

DATABASE_URL="postgresql://postgres:@localhost/postgres?sslmode=disable"
# API_KEY is the key used to interact with this API
API_KEY="changeme"
# the master API key which can do anything
MASTER_KEY="secret"
# alpha-numeric and underscores only (^[A-Za-z0-9_]+$)
APP_NAME="myapp"
# CUSTOM_TOKEN_SECRET is the secret used to verify a custom token for login
CUSTOM_TOKEN_SECRET="ssosecret"



########################################################################
# additional configuration options
########################################################################
# DB connection access control. defaults to "role"
# ACCESS_CONRTOL=role

###
# Apple Push notification

# enable apple push notifications
# use YES or NO
# APNS_ENABLE=NO
# cert or token
# APNS_TYPE=cert

# full string of the certificate in PEM format
# APNS_CERTIFICATE=
# absolute path to the cert, in PEM format.
# APNS_CERTIFICATE_PATH=/path/to/cert.pem
# APNS_PRIVATE_KEY_PATH=/path/to/cert.key

# sandbox or production
# APNS_ENV=sandbox

# APNS_KEY_ID=
# APNS_TEAM_ID=
# APNS_TOKEN_KEY=
# APNS_TOKEN_KEY_PATH=
###

###
# Skygear supports using Amazon S3 as the default storage backend. Set the AWS
# access key, secret key, region and bucket by the following environment variables.
#
# ASSET_STORE=s3
# ASSET_STORE_PUBLIC=NO
# ASSET_STORE_ACCESS_KEY=AKXXXXXXXXXXXXXXXXXX
# ASSET_STORE_SECRET_KEY=3XXx/X/XxxXXXXxXxXxxXXXXxx00x0XXxXxx0xxX
# ASSET_STORE_REGION=us-east-1
# ASSET_STORE_BUCKET=thebucketname
# ASSET_STORE_PATH=
# ASSET_STORE_REGION=
# ASSET_STORE_S3_URL_PREFIX=
# ASSET_STORE_SECRET=
# ASSET_STORE_URL_PREFIX=

# Used when ASSET_STORE is cloud (http://portal.skygear.io/)
# CLOUD_ASSET_HOST=
# CLOUD_ASSET_PRIVATE_PREFIX=
# CLOUD_ASSET_PUBLIC_PREFIX=
# CLOUD_ASSET_TOKEN=
###

# Authentication Record Configurations
# For advance use, please refer to
# refs: https://github.com/SkygearIO/features/blob/master/features/48-user-profile-discovery/user-profile.md
# AUTH_RECORD_TYPE=user
# AUTH_RECORD_KEYS=username,email

# which hosts to allow for CORS
# CORS_HOST="*"
# DB_IMPL_NAME=pq

# enable dev mode
# DEV_MODE=true

# enable google cloud messaging
# GCM_ENABLE=false
# google cloud messaging api key
# GCM_APIKEY=

# enable baidu push
# BAIDU_ENABLE=false
# BAIDU_API_KEY=
# BAIDU_SECRET_KEY=

# host to listen on. defaults to empty string
# HOST=localhost
# defaults to 3000
# PORT=3000

# LOG_LEVEL can be debug, info, warn, error, fatal, panic. defaults to debug
# LOG_LEVEL=debug
# each environment can have it's own log level like LOG_LEVEL_<environment>
# i.e. LOG_LEVEL_PRODUCTION=warn

# LOG_ROUTER_BYTE_LIMIT=100000
# 
# Set log formatter. Supported formatters: text, json.
# LOG_FORMATTER=

# RESPONSE_TIMEOUT=60

# send logs to snetry.io
# SENTRY_DSN=
# SENTRY_LEVEL=

# SLAVE - boolean, specify true to run skygear-server is in slave mode. If you have
# multiple skygear-servers running behind a load balancer, you should dedicate
# one skygear-server as leader and enable slave mode on all the rest. When slave
# mode is enabled, features such as pubsub and cron jobs are disabled on slaves
# so the slaves will not be in conflict with the leader, meaning that only one
# instance of skygear-server will be running these features.
#
# SLAVE=

# TOKEN_STORE is where to store the tokens
# defaults to jwt (JSON Web Token, https://tools.ietf.org/html/rfc7519)
# can be fs, redis, or jwt
# TOKEN_STORE=jwt
# TOKEN_STORE_EXPIRY=
# TOKEN_STORE_PATH=
# TOKEN_STORE_PREFIX=
# TOKEN_STORE_SECRET=

# Plugin ZMQ transport performance tuning parameters
# ZMQ_MAX_BOUNCE=
# ZMQ_TIMEOUT=

# PLUGINS=plugin1,plugin2,plugin3
# each plugin can have the three following vars paired with them
# <plugin>_TRANSPORT
# <plugin>_PATH
# <plugin>_ARGS
#
# for example:
# PLUGINS=CAT,BUG
#
# CAT_TRANSPORT=exec
# CAT_PATH=py-skygear
# CAT_ARGS=chima,faseng
#
# BUG_TRANSPORT=zmq
# BUG_PATH=tcp://skygear:5555

# Verification
# VERIFY_REQUIRED=false
